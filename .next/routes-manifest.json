{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/dashboard/admin",
      "regex": "^/dashboard/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/admin(?:/)?$"
    },
    {
      "page": "/dashboard/admin/users",
      "regex": "^/dashboard/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/admin/users(?:/)?$"
    },
    {
      "page": "/dashboard/manager",
      "regex": "^/dashboard/manager(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/manager(?:/)?$"
    },
    {
      "page": "/dashboard/manager/team",
      "regex": "^/dashboard/manager/team(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/manager/team(?:/)?$"
    },
    {
      "page": "/dashboard/rep",
      "regex": "^/dashboard/rep(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/rep(?:/)?$"
    },
    {
      "page": "/dashboard/rep/commission",
      "regex": "^/dashboard/rep/commission(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/rep/commission(?:/)?$"
    },
    {
      "page": "/dashboard/rep/deals",
      "regex": "^/dashboard/rep/deals(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/rep/deals(?:/)?$"
    },
    {
      "page": "/dashboard/rep/leads",
      "regex": "^/dashboard/rep/leads(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard/rep/leads(?:/)?$"
    },
    {
      "page": "/help",
      "regex": "^/help(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/help(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/pricing",
      "regex": "^/pricing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pricing(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/solutions",
      "regex": "^/solutions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/solutions(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}